2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_INSTANCE" already exists; SQL statement:
CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_PARAMS" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR2(65535) , DATE_VAL TIMESTAMP DEFAULT NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT , WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_STEP_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_JOB" already exists; SQL statement:
CREATE TABLE PREDICT_JOB ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, JOBID VARCHAR2(10), JOBGB VARCHAR2(10), INPUTFILENAME VARCHAR2(255) NOT NULL, COLUMNCALULATEYN VARCHAR2(10) NOT NULL, INPUTDATACNT LONG(10) NOT NULL, ENDDTIM VARCHAR2(20), PSI VARCHAR2(20), CAR VARCHAR2(20), CHISQCNT VARCHAR2(20), COMMENT VARCHAR2(255), PRIMARY KEY(PROJECTNAME, REGDTIM), constraint PREDICT_JOB_UN unique (PROJECTNAME, REGDTIM) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_SQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_SQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, SQUAREDERROR DOUBLE NOT NULL, CNT DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_ROW_SQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_TOT_COL_MEANSQUAREDERROR ON TOT_COL_MEANSQUAREDERROR(PROJECTNAME, REGDTIM, FIELDNAME) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_PREDICT_ROW_MEANSQUAREDERROR ON PREDICT_ROW_MEANSQUAREDERROR(PROJECTNAME, REGDTIM) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, MEANSQUAREDERROR), constraint DEV_MEANSQUAREDERROR_UN unique (PROJECTNAME, MEANSQUAREDERROR) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), constraint DEV_COL_MEANSQUAREDERROR_UN unique (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, MEANSQUAREDERROR), constraint TOT_MEANSQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, MEANSQUAREDERROR) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE DEV_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME, ITEMVALUE), constraint DEV_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE TOT_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE), constraint TOT_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_CHISQ" already exists; SQL statement:
CREATE TABLE PREDICT_CHISQ ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, DOF LONG(10) NOT NULL, CHISQSTAT DOUBLE NOT NULL, PVALUE DOUBLE NOT NULL, NEWVALUECNT LONG(10) NOT NULL, ANOMALYRSLT INT NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_CHISQ_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MODEL_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE MODEL_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MODELUSE VARCHAR2(1) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), CONSTRAINT MODEL_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE PREDICT_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT PREDICT_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE TOT_ITEM_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT TOT_ITEM_MEANPROBABILITY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_STAT" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_STAT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROB DOUBLE NOT NULL, MINPROB DOUBLE NOT NULL, PCNTL25PROB DOUBLE NOT NULL, MEDIANPROB DOUBLE NOT NULL, PCNTL75PROB DOUBLE NOT NULL, PCNTL90PROB DOUBLE NOT NULL, PCNTL95PROB DOUBLE NOT NULL, PCNTL99PROB DOUBLE NOT NULL, MAXPROB DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_STAT_UN UNIQUE (PROJECTNAME, REGDTIM) ) [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ONLINE_RESULT" already exists; SQL statement:
CREATE TABLE PREDICT_ONLINE_RESULT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, MODELITEMCNT INT NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, ENDDTIM VARCHAR2(20) NOT NULL, INPUTFILENAME VARCHAR2(255) NOT NULL, DATACNT LONG(10) NOT NULL, ANOMALYMEANPROB DOUBLE NOT NULL, ANOMALYRATIO DOUBLE NOT NULL, ANOMALYITEMCNT INT NOT NULL, ANOMALYRESULT INT NOT NULL, COMMENT VARCHAR2(255) , PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT PREDICT_ONLINE_RESULT_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_DIST ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_DIST_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-04-14 16:35:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE DEV_ROWPROB_DIST( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME), CONSTRAINT DEV_ROWPROB_DIST_UN UNIQUE(PROJECTNAME) ) [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_INSTANCE" already exists; SQL statement:
CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_PARAMS" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR2(65535) , DATE_VAL TIMESTAMP DEFAULT NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT , WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_STEP_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_JOB" already exists; SQL statement:
CREATE TABLE PREDICT_JOB ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, JOBID VARCHAR2(10), JOBGB VARCHAR2(10), INPUTFILENAME VARCHAR2(255) NOT NULL, COLUMNCALULATEYN VARCHAR2(10) NOT NULL, INPUTDATACNT LONG(10) NOT NULL, ENDDTIM VARCHAR2(20), PSI VARCHAR2(20), CAR VARCHAR2(20), CHISQCNT VARCHAR2(20), COMMENT VARCHAR2(255), PRIMARY KEY(PROJECTNAME, REGDTIM), constraint PREDICT_JOB_UN unique (PROJECTNAME, REGDTIM) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_SQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_SQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, SQUAREDERROR DOUBLE NOT NULL, CNT DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_ROW_SQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_TOT_COL_MEANSQUAREDERROR ON TOT_COL_MEANSQUAREDERROR(PROJECTNAME, REGDTIM, FIELDNAME) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_PREDICT_ROW_MEANSQUAREDERROR ON PREDICT_ROW_MEANSQUAREDERROR(PROJECTNAME, REGDTIM) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, MEANSQUAREDERROR), constraint DEV_MEANSQUAREDERROR_UN unique (PROJECTNAME, MEANSQUAREDERROR) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), constraint DEV_COL_MEANSQUAREDERROR_UN unique (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, MEANSQUAREDERROR), constraint TOT_MEANSQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, MEANSQUAREDERROR) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE DEV_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME, ITEMVALUE), constraint DEV_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE TOT_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE), constraint TOT_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_CHISQ" already exists; SQL statement:
CREATE TABLE PREDICT_CHISQ ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, DOF LONG(10) NOT NULL, CHISQSTAT DOUBLE NOT NULL, PVALUE DOUBLE NOT NULL, NEWVALUECNT LONG(10) NOT NULL, ANOMALYRSLT INT NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_CHISQ_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MODEL_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE MODEL_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MODELUSE VARCHAR2(1) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), CONSTRAINT MODEL_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE PREDICT_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT PREDICT_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE TOT_ITEM_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT TOT_ITEM_MEANPROBABILITY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_STAT" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_STAT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROB DOUBLE NOT NULL, MINPROB DOUBLE NOT NULL, PCNTL25PROB DOUBLE NOT NULL, MEDIANPROB DOUBLE NOT NULL, PCNTL75PROB DOUBLE NOT NULL, PCNTL90PROB DOUBLE NOT NULL, PCNTL95PROB DOUBLE NOT NULL, PCNTL99PROB DOUBLE NOT NULL, MAXPROB DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_STAT_UN UNIQUE (PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ONLINE_RESULT" already exists; SQL statement:
CREATE TABLE PREDICT_ONLINE_RESULT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, MODELITEMCNT INT NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, ENDDTIM VARCHAR2(20) NOT NULL, INPUTFILENAME VARCHAR2(255) NOT NULL, DATACNT LONG(10) NOT NULL, ANOMALYMEANPROB DOUBLE NOT NULL, ANOMALYRATIO DOUBLE NOT NULL, ANOMALYITEMCNT INT NOT NULL, ANOMALYRESULT INT NOT NULL, COMMENT VARCHAR2(255) , PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT PREDICT_ONLINE_RESULT_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_DIST ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_DIST_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-03 12:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE DEV_ROWPROB_DIST( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME), CONSTRAINT DEV_ROWPROB_DIST_UN UNIQUE(PROJECTNAME) ) [42101-199]
2021-05-06 08:58:34 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:D:/WatchDog_20210210/WatchDog/h2db.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$f319fffe.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$f319fffe$$FastClassBySpringCGLIB$$c2e56023.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$f319fffe.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:D:/WatchDog_20210210/WatchDog/h2db.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 103 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:D:/WatchDog_20210210/WatchDog/h2db.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 97 more
2021-05-06 08:58:36 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:D:/WatchDog_20210210/WatchDog/h2db.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.WarLauncher.main(WarLauncher.java:58)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:D:/WatchDog_20210210/WatchDog/h2db.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 76 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:D:/WatchDog_20210210/WatchDog/h2db.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 70 more
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_INSTANCE" already exists; SQL statement:
CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_PARAMS" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR2(65535) , DATE_VAL TIMESTAMP DEFAULT NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT , WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_STEP_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_JOB" already exists; SQL statement:
CREATE TABLE PREDICT_JOB ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, JOBID VARCHAR2(10), JOBGB VARCHAR2(10), INPUTFILENAME VARCHAR2(255) NOT NULL, COLUMNCALULATEYN VARCHAR2(10) NOT NULL, INPUTDATACNT LONG(10) NOT NULL, ENDDTIM VARCHAR2(20), PSI VARCHAR2(20), CAR VARCHAR2(20), CHISQCNT VARCHAR2(20), COMMENT VARCHAR2(255), PRIMARY KEY(PROJECTNAME, REGDTIM), constraint PREDICT_JOB_UN unique (PROJECTNAME, REGDTIM) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_SQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_SQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, SQUAREDERROR DOUBLE NOT NULL, CNT DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_ROW_SQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_TOT_COL_MEANSQUAREDERROR ON TOT_COL_MEANSQUAREDERROR(PROJECTNAME, REGDTIM, FIELDNAME) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_PREDICT_ROW_MEANSQUAREDERROR ON PREDICT_ROW_MEANSQUAREDERROR(PROJECTNAME, REGDTIM) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, MEANSQUAREDERROR), constraint DEV_MEANSQUAREDERROR_UN unique (PROJECTNAME, MEANSQUAREDERROR) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), constraint DEV_COL_MEANSQUAREDERROR_UN unique (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, MEANSQUAREDERROR), constraint TOT_MEANSQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, MEANSQUAREDERROR) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE DEV_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME, ITEMVALUE), constraint DEV_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE TOT_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE), constraint TOT_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_CHISQ" already exists; SQL statement:
CREATE TABLE PREDICT_CHISQ ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, DOF LONG(10) NOT NULL, CHISQSTAT DOUBLE NOT NULL, PVALUE DOUBLE NOT NULL, NEWVALUECNT LONG(10) NOT NULL, ANOMALYRSLT INT NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_CHISQ_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MODEL_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE MODEL_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MODELUSE VARCHAR2(1) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), CONSTRAINT MODEL_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE PREDICT_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT PREDICT_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE TOT_ITEM_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT TOT_ITEM_MEANPROBABILITY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_STAT" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_STAT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROB DOUBLE NOT NULL, MINPROB DOUBLE NOT NULL, PCNTL25PROB DOUBLE NOT NULL, MEDIANPROB DOUBLE NOT NULL, PCNTL75PROB DOUBLE NOT NULL, PCNTL90PROB DOUBLE NOT NULL, PCNTL95PROB DOUBLE NOT NULL, PCNTL99PROB DOUBLE NOT NULL, MAXPROB DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_STAT_UN UNIQUE (PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ONLINE_RESULT" already exists; SQL statement:
CREATE TABLE PREDICT_ONLINE_RESULT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, MODELITEMCNT INT NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, ENDDTIM VARCHAR2(20) NOT NULL, INPUTFILENAME VARCHAR2(255) NOT NULL, DATACNT LONG(10) NOT NULL, ANOMALYMEANPROB DOUBLE NOT NULL, ANOMALYRATIO DOUBLE NOT NULL, ANOMALYITEMCNT INT NOT NULL, ANOMALYRESULT INT NOT NULL, COMMENT VARCHAR2(255) , PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT PREDICT_ONLINE_RESULT_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_DIST ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_DIST_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 09:22:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE DEV_ROWPROB_DIST( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME), CONSTRAINT DEV_ROWPROB_DIST_UN UNIQUE(PROJECTNAME) ) [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_INSTANCE" already exists; SQL statement:
CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_PARAMS" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR2(65535) , DATE_VAL TIMESTAMP DEFAULT NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT , WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_STEP_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_JOB" already exists; SQL statement:
CREATE TABLE PREDICT_JOB ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, JOBID VARCHAR2(10), JOBGB VARCHAR2(10), INPUTFILENAME VARCHAR2(255) NOT NULL, COLUMNCALULATEYN VARCHAR2(10) NOT NULL, INPUTDATACNT LONG(10) NOT NULL, ENDDTIM VARCHAR2(20), PSI VARCHAR2(20), CAR VARCHAR2(20), CHISQCNT VARCHAR2(20), COMMENT VARCHAR2(255), PRIMARY KEY(PROJECTNAME, REGDTIM), constraint PREDICT_JOB_UN unique (PROJECTNAME, REGDTIM) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_SQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_SQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, SQUAREDERROR DOUBLE NOT NULL, CNT DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_ROW_SQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_TOT_COL_MEANSQUAREDERROR ON TOT_COL_MEANSQUAREDERROR(PROJECTNAME, REGDTIM, FIELDNAME) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_PREDICT_ROW_MEANSQUAREDERROR ON PREDICT_ROW_MEANSQUAREDERROR(PROJECTNAME, REGDTIM) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, MEANSQUAREDERROR), constraint DEV_MEANSQUAREDERROR_UN unique (PROJECTNAME, MEANSQUAREDERROR) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), constraint DEV_COL_MEANSQUAREDERROR_UN unique (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, MEANSQUAREDERROR), constraint TOT_MEANSQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, MEANSQUAREDERROR) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE DEV_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME, ITEMVALUE), constraint DEV_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE TOT_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE), constraint TOT_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_CHISQ" already exists; SQL statement:
CREATE TABLE PREDICT_CHISQ ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, DOF LONG(10) NOT NULL, CHISQSTAT DOUBLE NOT NULL, PVALUE DOUBLE NOT NULL, NEWVALUECNT LONG(10) NOT NULL, ANOMALYRSLT INT NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_CHISQ_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MODEL_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE MODEL_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MODELUSE VARCHAR2(1) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), CONSTRAINT MODEL_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE PREDICT_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT PREDICT_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE TOT_ITEM_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT TOT_ITEM_MEANPROBABILITY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_STAT" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_STAT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROB DOUBLE NOT NULL, MINPROB DOUBLE NOT NULL, PCNTL25PROB DOUBLE NOT NULL, MEDIANPROB DOUBLE NOT NULL, PCNTL75PROB DOUBLE NOT NULL, PCNTL90PROB DOUBLE NOT NULL, PCNTL95PROB DOUBLE NOT NULL, PCNTL99PROB DOUBLE NOT NULL, MAXPROB DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_STAT_UN UNIQUE (PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ONLINE_RESULT" already exists; SQL statement:
CREATE TABLE PREDICT_ONLINE_RESULT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, MODELITEMCNT INT NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, ENDDTIM VARCHAR2(20) NOT NULL, INPUTFILENAME VARCHAR2(255) NOT NULL, DATACNT LONG(10) NOT NULL, ANOMALYMEANPROB DOUBLE NOT NULL, ANOMALYRATIO DOUBLE NOT NULL, ANOMALYITEMCNT INT NOT NULL, ANOMALYRESULT INT NOT NULL, COMMENT VARCHAR2(255) , PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT PREDICT_ONLINE_RESULT_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_DIST ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_DIST_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 12:53:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE DEV_ROWPROB_DIST( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME), CONSTRAINT DEV_ROWPROB_DIST_UN UNIQUE(PROJECTNAME) ) [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_INSTANCE" already exists; SQL statement:
CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_PARAMS" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR2(65535) , DATE_VAL TIMESTAMP DEFAULT NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT , WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_STEP_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "BATCH_JOB_EXECUTION_CONTEXT" already exists; SQL statement:
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_STEP_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_EXECUTION_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Sequence "BATCH_JOB_SEQ" already exists; SQL statement:
CREATE SEQUENCE BATCH_JOB_SEQ [90035-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:573)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:53)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_JOB" already exists; SQL statement:
CREATE TABLE PREDICT_JOB ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, JOBID VARCHAR2(10), JOBGB VARCHAR2(10), INPUTFILENAME VARCHAR2(255) NOT NULL, COLUMNCALULATEYN VARCHAR2(10) NOT NULL, INPUTDATACNT LONG(10) NOT NULL, ENDDTIM VARCHAR2(20), PSI VARCHAR2(20), CAR VARCHAR2(20), CHISQCNT VARCHAR2(20), COMMENT VARCHAR2(255), PRIMARY KEY(PROJECTNAME, REGDTIM), constraint PREDICT_JOB_UN unique (PROJECTNAME, REGDTIM) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_SQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_SQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, SQUAREDERROR DOUBLE NOT NULL, CNT DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_ROW_SQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_TOT_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_TOT_COL_MEANSQUAREDERROR ON TOT_COL_MEANSQUAREDERROR(PROJECTNAME, REGDTIM, FIELDNAME) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Index "IDX_PREDICT_ROW_MEANSQUAREDERROR" already exists; SQL statement:
CREATE INDEX IDX_PREDICT_ROW_MEANSQUAREDERROR ON PREDICT_ROW_MEANSQUAREDERROR(PROJECTNAME, REGDTIM) [42111-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:76)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.jdbc.AbstractDataSourceInitializer.initialize(AbstractDataSourceInitializer.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.nice.datafileanomalydetection.DatafileAnomalyDetectionApp.main(DatafileAnomalyDetectionApp.java:24)
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, MEANSQUAREDERROR), constraint DEV_MEANSQUAREDERROR_UN unique (PROJECTNAME, MEANSQUAREDERROR) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_COL_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE DEV_COL_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), constraint DEV_COL_MEANSQUAREDERROR_UN unique (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_MEANSQUAREDERROR" already exists; SQL statement:
CREATE TABLE TOT_MEANSQUAREDERROR ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANSQUAREDERROR DOUBLE NOT NULL, CNT LONG(10) NOT NULL, RATIO DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, MEANSQUAREDERROR), constraint TOT_MEANSQUAREDERROR_UN unique (PROJECTNAME, REGDTIM, MEANSQUAREDERROR) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE DEV_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME, ITEMVALUE), constraint DEV_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_DISTRIBUTION" already exists; SQL statement:
CREATE TABLE TOT_ITEM_DISTRIBUTION ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, ITEMVALUE VARCHAR2(100) NOT NULL, CNT LONG(10) NOT NULL, PROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE), constraint TOT_ITEM_DISTRIBUTION_UN unique (PROJECTNAME, REGDTIM, FIELDNAME, ITEMVALUE) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_CHISQ" already exists; SQL statement:
CREATE TABLE PREDICT_CHISQ ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, DOF LONG(10) NOT NULL, CHISQSTAT DOUBLE NOT NULL, PVALUE DOUBLE NOT NULL, NEWVALUECNT LONG(10) NOT NULL, ANOMALYRSLT INT NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), constraint PREDICT_CHISQ_UN unique (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MODEL_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE MODEL_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MODELUSE VARCHAR2(1) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, FIELDNAME), CONSTRAINT MODEL_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, FIELDNAME) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_DATA_SUMMARY" already exists; SQL statement:
CREATE TABLE PREDICT_DATA_SUMMARY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, FIELDTYPE VARCHAR2(20) NOT NULL, MEAN DOUBLE NOT NULL, STANDARD_DEVIATION DOUBLE NOT NULL, MINIMUM DOUBLE NOT NULL, LOWER_QUANTILE DOUBLE NOT NULL, MEDIAN DOUBLE NOT NULL, UPPER_QUANTILE DOUBLE NOT NULL, MAXIMUM DOUBLE NOT NULL, IQR DOUBLE NOT NULL, NA_COUNT LONG(10) NOT NULL, NONZERO_COUNT LONG(10) NOT NULL, MODE VARCHAR2(20) NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT PREDICT_DATA_SUMMARY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ROW_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE PREDICT_ROW_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ITEM_MEANPROBABILITY" already exists; SQL statement:
CREATE TABLE TOT_ITEM_MEANPROBABILITY ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, FIELDNAME VARCHAR2(100) NOT NULL, MEANPROBABILITY DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM, FIELDNAME), CONSTRAINT TOT_ITEM_MEANPROBABILITY_UN UNIQUE (PROJECTNAME, REGDTIM, FIELDNAME) )  [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_STAT" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_STAT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, MEANPROB DOUBLE NOT NULL, MINPROB DOUBLE NOT NULL, PCNTL25PROB DOUBLE NOT NULL, MEDIANPROB DOUBLE NOT NULL, PCNTL75PROB DOUBLE NOT NULL, PCNTL90PROB DOUBLE NOT NULL, PCNTL95PROB DOUBLE NOT NULL, PCNTL99PROB DOUBLE NOT NULL, MAXPROB DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_STAT_UN UNIQUE (PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PREDICT_ONLINE_RESULT" already exists; SQL statement:
CREATE TABLE PREDICT_ONLINE_RESULT ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, MODELITEMCNT INT NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, ENDDTIM VARCHAR2(20) NOT NULL, INPUTFILENAME VARCHAR2(255) NOT NULL, DATACNT LONG(10) NOT NULL, ANOMALYMEANPROB DOUBLE NOT NULL, ANOMALYRATIO DOUBLE NOT NULL, ANOMALYITEMCNT INT NOT NULL, ANOMALYRESULT INT NOT NULL, COMMENT VARCHAR2(255) , PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT PREDICT_ONLINE_RESULT_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TOT_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE TOT_ROWPROB_DIST ( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, INPUTDATE VARCHAR2(20) NOT NULL, REGDTIM VARCHAR2(20) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME, REGDTIM), CONSTRAINT TOT_ROWPROB_DIST_UN UNIQUE(PROJECTNAME, REGDTIM) ) [42101-199]
2021-05-06 14:13:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEV_ROWPROB_DIST" already exists; SQL statement:
CREATE TABLE DEV_ROWPROB_DIST( PROJECTNAME VARCHAR2(100) NOT NULL, PKGID VARCHAR2(100) NOT NULL, PROB0TO5 DOUBLE NOT NULL, PROB5TO10 DOUBLE NOT NULL, PROB10TO15 DOUBLE NOT NULL, PROB15TO20 DOUBLE NOT NULL, PROB20TO25 DOUBLE NOT NULL, PROB25TO30 DOUBLE NOT NULL, PROB30TO35 DOUBLE NOT NULL, PROB35TO40 DOUBLE NOT NULL, PROB40TO45 DOUBLE NOT NULL, PROB45TO50 DOUBLE NOT NULL, PROB50TO55 DOUBLE NOT NULL, PROB55TO60 DOUBLE NOT NULL, PROB60TO65 DOUBLE NOT NULL, PROB65TO70 DOUBLE NOT NULL, PROB70TO75 DOUBLE NOT NULL, PROB75TO80 DOUBLE NOT NULL, PROB80TO85 DOUBLE NOT NULL, PROB85TO90 DOUBLE NOT NULL, PROB90TO95 DOUBLE NOT NULL, PROB95TO100 DOUBLE NOT NULL, PRIMARY KEY(PROJECTNAME), CONSTRAINT DEV_ROWPROB_DIST_UN UNIQUE(PROJECTNAME) ) [42101-199]
